/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projecteuler;

import java.util.ArrayList;

/**
 *
 * @author retif
 */
public class Exercises {
    
    public static void E01() {
        
        //If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

        //Find the sum of all the multiples of 3 or 5 below 1000.
        
        int soma_total = 0;
        
        for (int c = 0; c < 500;c++) {
            
            if ((3 * c) > 1000 ) {
                
                break;
            }
            
            soma_total += (3*c);
            
        }
        
        OUTER_LOOP: for (int c = 0; c < 500;c++) {
            
            if ((5 * c) >= 1000 ) {
                
                break;
            }
            
            for (int b = 5; b <= 330; b += 5) {
                
                if ((5*c) == (3*b)) {
                    
                    continue OUTER_LOOP;
                    
                }
                
            }
            
            soma_total += (5*c);
        
        } //OUTER LOOP SOMA
        
            System.out.println("Exercício 1 Total = " + soma_total);
        
    } //E01
    
    public static void E02() {
        
        //Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        
        int anterior_maior;
        int menor = 0;
        int maior = 1;
        int total = 0;
        int posicao = 1;
        
        
        
          
        while ( (maior + menor) <= 4000000 ){
            
            
            
            anterior_maior = maior;
            
            maior = menor + maior;
            
            menor = anterior_maior;
            
            if ( (maior % 2) == 0) {
                
            total += maior;
                
            }
            
            System.out.println(posicao + "° Fibonnacci: " + maior);
            System.out.println("");
            System.out.println(">>> " + posicao + "° Soma Total: " + total);
            System.out.println("");
            
            posicao++;
            
        }
        
        
    } //E02
    
    public static void E03() {
        
        //The prime factors of 13195 are 5, 7, 13 and 29.
        //What is the largest prime factor of the number 600851475143 ?
        
        ArrayList <Integer> primos = new ArrayList();
        
        
        //primeiros primos base
        primos.add(2);
        primos.add(3);
        primos.add(5);
        primos.add(7);
        primos.add(11);
        //primos.add(13);
        
        long numero = 600851475143l;
        
        Range: for (int i = 12; i < 100000000; i++) {
           
           String testepar = Integer.toString(i);
           int teste = Integer.parseInt(Character.toString(testepar.charAt(testepar.length()-1)));
                      
           //Teste Multiplo de 2
           if ( teste == 0 || teste == 2 || teste == 4 || teste == 6 || teste == 8 ) {
                
                continue;
                
            } 
            
            //Teste Divisivel pelos Primos da ArrayList
            
            long i_double = i;
            long math;
                     
            for (int c= 0; c < primos.size(); c++) {
                
                //System.out.println(primos.get(c));
                
                if (i % primos.get(c) == 0) {
                    
                    
                    continue Range;

                }
                
                if (i < Math.pow(primos.get(c), 2) ) {
                    
                    //System.out.println(i);
                    primos.add(i);
                    
                    math = (long) Math.pow(i, 2);
                    //System.out.println(math);
                                                            
                    if ( numero < math ) {
                        
                        System.out.println("Primo ao quadrado maior que o numero = " + i);                        
                        break Range;
                        
                    } else {
                        
                    continue Range;
                        
                        
                    }
                    
                }
                
            } // Teste Divisivel por primo
           
        
            
        } // Final Laço Range
        
        // Agora temos todos os primos anteriores ao numero
        
        System.out.println("---------------------");
        
        
        // Agora pegamos a ArrayList contendos todos os numeros primos que ao quadrado dao menos que o numero e dividimos o numero por esses primos
        for (int show = 0 ; show < primos.size() ; show++) {
            
            // Aqui o que der divisao zero é numero primo do numero , sendo assim o ultimo numero sera nossa resposta
            if ( numero % primos.get(show) == 0) {
                
                System.out.println(primos.get(show));
                
            } else {
                
            }
            
            
            
            
            
        } // Final Mostrar ArraList
    
    } // Final E03
    
}
